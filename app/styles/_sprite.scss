// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$app-store-name: 'app-store';
$app-store-x: 141px;
$app-store-y: 0px;
$app-store-offset-x: -141px;
$app-store-offset-y: 0px;
$app-store-width: 23px;
$app-store-height: 41px;
$app-store-total-width: 164px;
$app-store-total-height: 132px;
$app-store-image: '../images/sprite.png';
$app-store: (141px, 0px, -141px, 0px, 23px, 41px, 164px, 132px, '../images/sprite.png', 'app-store', );
$arrow-down-name: 'arrow-down';
$arrow-down-x: 141px;
$arrow-down-y: 41px;
$arrow-down-offset-x: -141px;
$arrow-down-offset-y: -41px;
$arrow-down-width: 15px;
$arrow-down-height: 8px;
$arrow-down-total-width: 164px;
$arrow-down-total-height: 132px;
$arrow-down-image: '../images/sprite.png';
$arrow-down: (141px, 41px, -141px, -41px, 15px, 8px, 164px, 132px, '../images/sprite.png', 'arrow-down', );
$arrow-slider-left-name: 'arrow-slider-left';
$arrow-slider-left-x: 51px;
$arrow-slider-left-y: 51px;
$arrow-slider-left-offset-x: -51px;
$arrow-slider-left-offset-y: -51px;
$arrow-slider-left-width: 39px;
$arrow-slider-left-height: 39px;
$arrow-slider-left-total-width: 164px;
$arrow-slider-left-total-height: 132px;
$arrow-slider-left-image: '../images/sprite.png';
$arrow-slider-left: (51px, 51px, -51px, -51px, 39px, 39px, 164px, 132px, '../images/sprite.png', 'arrow-slider-left', );
$arrow-slider-right-name: 'arrow-slider-right';
$arrow-slider-right-x: 102px;
$arrow-slider-right-y: 0px;
$arrow-slider-right-offset-x: -102px;
$arrow-slider-right-offset-y: 0px;
$arrow-slider-right-width: 39px;
$arrow-slider-right-height: 39px;
$arrow-slider-right-total-width: 164px;
$arrow-slider-right-total-height: 132px;
$arrow-slider-right-image: '../images/sprite.png';
$arrow-slider-right: (102px, 0px, -102px, 0px, 39px, 39px, 164px, 132px, '../images/sprite.png', 'arrow-slider-right', );
$fb-footer-name: 'fb-footer';
$fb-footer-x: 0px;
$fb-footer-y: 0px;
$fb-footer-offset-x: 0px;
$fb-footer-offset-y: 0px;
$fb-footer-width: 51px;
$fb-footer-height: 51px;
$fb-footer-total-width: 164px;
$fb-footer-total-height: 132px;
$fb-footer-image: '../images/sprite.png';
$fb-footer: (0px, 0px, 0px, 0px, 51px, 51px, 164px, 132px, '../images/sprite.png', 'fb-footer', );
$fb-name: 'fb';
$fb-x: 51px;
$fb-y: 0px;
$fb-offset-x: -51px;
$fb-offset-y: 0px;
$fb-width: 51px;
$fb-height: 51px;
$fb-total-width: 164px;
$fb-total-height: 132px;
$fb-image: '../images/sprite.png';
$fb: (51px, 0px, -51px, 0px, 51px, 51px, 164px, 132px, '../images/sprite.png', 'fb', );
$google-play-name: 'google-play';
$google-play-x: 0px;
$google-play-y: 102px;
$google-play-offset-x: 0px;
$google-play-offset-y: -102px;
$google-play-width: 28px;
$google-play-height: 30px;
$google-play-total-width: 164px;
$google-play-total-height: 132px;
$google-play-image: '../images/sprite.png';
$google-play: (0px, 102px, 0px, -102px, 28px, 30px, 164px, 132px, '../images/sprite.png', 'google-play', );
$message-name: 'message';
$message-x: 102px;
$message-y: 39px;
$message-offset-x: -102px;
$message-offset-y: -39px;
$message-width: 37px;
$message-height: 36px;
$message-total-width: 164px;
$message-total-height: 132px;
$message-image: '../images/sprite.png';
$message: (102px, 39px, -102px, -39px, 37px, 36px, 164px, 132px, '../images/sprite.png', 'message', );
$phone-name: 'phone';
$phone-x: 0px;
$phone-y: 51px;
$phone-offset-x: 0px;
$phone-offset-y: -51px;
$phone-width: 51px;
$phone-height: 51px;
$phone-total-width: 164px;
$phone-total-height: 132px;
$phone-image: '../images/sprite.png';
$phone: (0px, 51px, 0px, -51px, 51px, 51px, 164px, 132px, '../images/sprite.png', 'phone', );
$spritesheet-width: 164px;
$spritesheet-height: 132px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($app-store, $arrow-down, $arrow-slider-left, $arrow-slider-right, $fb-footer, $fb, $google-play, $message, $phone, );
$spritesheet: (164px, 132px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
